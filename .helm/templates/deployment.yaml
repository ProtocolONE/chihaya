kind: PersistentVolume
apiVersion: v1
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: {{ .Release.Name }}-geoip
  labels:
    app: {{ .Release.Name }}
    role: geoip
spec:
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: nfs-share
    path: "/home/nfsroot/k8sdata/{{ .Release.Name }}-geoip"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-geoip
spec:
  storageClassName: ""
  selector:
    matchLabels:
      app: {{ .Release.Name }}  
      role: "geoip"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---      
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      nodeSelector:
        chihaya: "true"
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
      - name: chihayakeys
        secret: 
          secretName: {{ .Release.Name }}-keys
      - name: {{ .Release.Name }}-geoip
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-geoip
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.backend.image }}:{{ .Values.backend.imageTag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "--config=/etc/chihaya/config.yaml"
        - "--debug"
        - "--json"
        ports:
        - name: restapi
          containerPort: {{ .Values.backend.port}}    
        - name: bittorrent-http
          containerPort: {{ $v := .Values.config.chihaya.http.addr | split ":" }}{{ $v._1 }}
          protocol: TCP
        - name: bittorrent-udp
          containerPort: {{ $v := .Values.config.chihaya.udp.addr | split ":" }}{{ $v._1 }}
          protocol: UDP
        - name: metrics
          containerPort: {{ $v := .Values.config.chihaya.prometheus_addr | split ":" }}{{ $v._1 }}
        env:
        {{- range .Values.env }}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: p1chihaya-env
              key: {{ . }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ $v := .Values.config.chihaya.prometheus_addr | split ":" }}{{ $v._1 }}
        volumeMounts:
        - name: config
          mountPath: /etc/chihaya
        - name: chihayakeys
          mountPath: /etc/chihaya/ssl
        - name: {{ .Release.Name }}-geoip
          mountPath: /etc/geoip/
          readOnly: false
        resources:
{{ toYaml .Values.resources | indent 10 }}
